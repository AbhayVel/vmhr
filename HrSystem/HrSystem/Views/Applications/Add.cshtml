
@{
    Layout = "_AddLayout";
}
@model HREntity.Application

@{
    ViewData["Title"] = "Add";
}

<h1>Add</h1>

<h4>Application</h4>
<hr />
<div class="row">
    <div class="col-md-4">
       
        <form  asp-action="Save" method="post" enctype = "multipart/form-data" >

            @Html.HiddenFor(x => x.Id)

            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div id="FirstName">
            <div class="form-group">
                @Html.LabelFor(x => x.FirstName, new { @class = "control-label" })
                @Html.TextBoxFor(x => x.FirstName, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.FirstName, "", new { @class = "text-danger" })
            </div></div>
            <div id="MidName">
           <div class="form-group">
                <label asp-for="MiddleName" class="control-label"></label>
                <input asp-for="MiddleName" class="form-control" />
                <span asp-validation-for="MiddleName" class="text-danger"></span>
            </div></div>
            <div id="LastName">
            <div class="form-group">
                <label asp-for="LastName" class="control-label"></label>
                <input asp-for="LastName" class="form-control" />
                <span asp-validation-for="LastName" class="text-danger"></span>
            </div></div>
            <div id="email">
            <div class="form-group">
                <label asp-for="Email" class="control-label"></label>
                @if (User.IsInRoleCheck("Admin"))
                {
                    <input asp-for="Email" readonly class="form-control" />
                }
                else
                {
                    <input asp-for="Email" class="form-control" />
                }

                <span asp-validation-for="Email" class="text-danger"></span>
            </div></div>
            <div id="phone">
            <div class="form-group">
                <label asp-for="Phone" class="control-label"></label>
                <input asp-for="Phone" class="form-control" />
                <span asp-validation-for="Phone" class="text-danger"></span>
            </div></div>
            
             @*   <label asp-for="Gender" class="control-label"></label>*@
             <div id="gender">
            <div class="form-group">
                @Html.LabelFor(x => x.Gender, new { @class = "control-label" })

                @Html.DropDownList("Gender", new List<SelectListItem>
               {


                 new SelectListItem{Text="Female"},
                 new SelectListItem{Text="Male"}

                },"Select",   new {@class="form-control"})
                  </div></div>
                 @*<select asp-for="Gender" class="form-control" asp-items="ViewBag.Gender"></select*@
          
            <div id="address">
            <div class="form-group">
                <label asp-for="Address" class="control-label"></label>
                <input asp-for="Address" class="form-control" />
                <span asp-validation-for="Address" class="text-danger"></span>
            </div></div>
            <div id="experience">
            <div class="form-group">
                <label asp-for="Experience" class="control-label"></label>
                <input asp-for="Experience" class="form-control" />
                <span asp-validation-for="Experience" class="text-danger"></span>
            </div> </div>
            
            <div id="resume">
                                                        
            <div class="form-group">
                <label  asp-for="Resume" class="control-label"></label>
                
                <input  type="file"  value="Upload" name="file" class="form-control" />
                    @if (!string.IsNullOrWhiteSpace(Model.Resume))
                    {
                      <input asp-for="Resume"  type="hidden"   />
                        <span>@Model.Resume</span>
                    }
                    <span  class="text-danger"></span>
            </div> </div>
            <div id="vacancyid">
            <div class="form-group">
                <label asp-for="VacancyId" class="control-label"></label>
                <select asp-for="VacancyId" class="form-control" asp-items="ViewBag.VacancyId"></select>
            </div></div>
            <div id="stageid">
            <div class="form-group">
                                                        
                @* @Html.LabelFor(x => x.StageId, new { @class = "control-label" })

                @Html.DropDownList("StageId", new List<SelectListItem>
               {


                 new SelectListItem{Text="Stage 0", Value="8", Selected=true},
                

                },"Select",   new {@class="form-control"})*@
                <label asp-for="StageId" class="control-label"></label>
                <select asp-for="StageId" class="form-control" asp-items="ViewBag.StageId"></select>
            </div> </div>

            <div id="datecreated">
            <div class="form-group">

                <label asp-for="DateCreated" class="control-label"></label>
                <input asp-for="DateCreated" class="form-control" type="text" />
                <span asp-validation-for="DateCreated" class="text-danger"></span>
            </div> </div>
            <div id="submit">
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div> </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>
@section Scripts {
    <script>

        $(document).ready(function () {
            $("#DateCreated").datepicker({
                dateFormat: 'dd-mm-yy',
                changeMonth: true,
                changeYear: true,
                yearRange: "2020:2030"
            });

        });
    </script>
}